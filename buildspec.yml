version: 0.2
phases:
  install:
    commands:
      - echo "Install Phase - Nothing to do using latest Amazon Linux Docker Image for CodeBuild which has all AWS Tools - https://github.com/aws/aws-codebuild-docker-images/blob/master/al2/x86_64/standard/3.0/Dockerfile"
  pre_build:
      commands:
        # Docker Image Tag with Date Time & Code Buiild Resolved Source Version
        - TAG="$(date +%Y-%m-%d.%H.%M.%S).$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 8)"
        - REPOID=${REPOSITORY_URI//\/*}
        # Update Image tag in our Kubernetes Deployment Manifest        
        - echo "Update Image tag in kube-manifest..."
        - sed -i 's@CONTAINER_IMAGE@'"$REPOSITORY_URI:$TAG"'@' manifests/deployment.yml
        - sed -i 's@REPOSITORY@'"$REPOID"'@' Dockerfile
        - sed -i 's@NAMESPACE@'"$NAMESPACE"'@' manifests/deployment.yml
        - sed -i 's@MIN_REPLICAS@'"${MIN_REPLICAS:=1}"'@' manifests/deployment.yml
        - sed -i 's@MAX_REPLICAS@'"${MAX_REPLICAS:=1}"'@' manifests/deployment.yml
        - sed -i 's@MIN_CPU@'"${MIN_CPU:=200m}"'@' manifests/deployment.yml
        - sed -i 's@MAX_CPU@'"${MAX_CPU:=500m}"'@' manifests/deployment.yml
        - sed -i 's@MIN_MEMORY@'"${MIN_MEMORY:=256Mi}"'@' manifests/deployment.yml
        - sed -i 's@MAX_MEMORY@'"${MAX_MEMORY:=1000Mi}"'@' manifests/deployment.yml
        #- sed -i 's@GAME_ID@'"$GAME_ID"'@' dragon_tiger.py
        #- sed -i 's@TABLE_ID@'"$TABLE_ID"'@' dragon_tiger.py
        - cat manifests/deployment.yml
        # Verify AWS CLI Version        
        - echo "Verify AWS CLI Version..."
        - aws --version
        # Login to ECR Registry for docker to push the image to ECR Repository
        - echo "Login in to Amazon ECR..."
        - $(aws ecr get-login --no-include-email)
        #- docker login --username AWS -p $(aws ecr get-login-password --region eu-west-2) https://$REPOID
        # Update Kube config Home Directory
        - export KUBECONFIG=$HOME/.kube/config
  build:
    commands:
      # Build Docker Image
      - echo "Build started on `date`"
      - echo "Building the Docker image..."
      - docker build --platform linux/amd64 -t $REPOSITORY_URI:$TAG .
      #- docker build --tag $REPOSITORY_URI:$TAG .
      - docker push $REPOSITORY_URI:$TAG
  post_build:
    commands:
      # Push Docker Image to ECR Repository
      - echo "Build completed on `date`"
      - echo "Pushing the Docker image to ECR Repository"
      # - docker push $REPOSITORY_URI:$TAG
      - echo "Docker Image Push to ECR Completed -  $REPOSITORY_URI:$TAG"    
      # Extracting AWS Credential Information using STS Assume Role for kubectl
      - echo "Setting Environment Variables related to AWS CLI for Kube Config Setup"          
      - aws sts get-caller-identity
      # Setup kubectl with our EKS Cluster              
      - echo "Update Kube Config"      
      - aws eks update-kubeconfig --name $EKS_CLUSTER_NAME
      # Apply changes to our Application using kubectl
      - echo "Apply changes to kube manifests"
      - ls       
      - kubectl apply -f manifests
      - echo "Completed applying changes to Kubernetes Objects"